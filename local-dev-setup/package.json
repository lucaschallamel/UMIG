{
  "name": "umig-local-dev-setup",
  "version": "1.0.0",
  "description": "Scripts for managing the UMIG local development environment, including data utilities.",
  "type": "module",
  "scripts": {
    "start": "node scripts/start.js",
    "stop": "node scripts/stop.js",
    "restart": "node scripts/restart.js",
    "restart:erase": "node scripts/restart.js --erase --all",
    "restart:erase:umig": "node scripts/restart.js --erase --umig",
    "restart:erase:confluence": "node scripts/restart.js --erase --confluence",
    "stop:erase": "node scripts/stop.js --erase --all",
    "stop:erase:umig": "node scripts/stop.js --erase --umig",
    "stop:erase:confluence": "node scripts/stop.js --erase --confluence",
    "generate-data": "node scripts/umig_generate_fake_data.js",
    "import-csv": "node scripts/umig_csv_importer.js",
    "generate-data:erase": "node scripts/umig_generate_fake_data.js --erase",
    "test": "npm run test:smart",
    "test:watch": "npm run test:unit:watch",
    "test:coverage": "npm run test:unit:coverage",
    "test:coverage:report": "npm run test:unit:coverage && open coverage/lcov-report/index.html",
    "comment:phase1-technology-prefixed": "Phase 1: Technology-prefixed test commands for clear JS/Groovy separation",
    "test:js:unit": "jest --config jest.config.unit.js",
    "test:js:integration": "jest --config jest.config.integration.js",
    "test:js:e2e": "playwright test __tests__/e2e/",
    "test:js:uat": "playwright test __tests__/uat/",
    "test:js:security": "jest --config jest.config.security.js",
    "test:js:security:labels": "jest --config jest.config.security.js __tests__/entities/labels/LabelsEntityManager.security.test.js",
    "test:js:security:applications": "jest --config jest.config.security.js __tests__/entities/applications/ApplicationsEntityManager.security.test.js",
    "test:js:security:pentest": "jest --config jest.config.security.js __tests__/unit/services/ComponentOrchestrator.pentest.test.js --testTimeout=30000",
    "test:js:security:all": "npm run test:js:security && npm run test:js:security:pentest",
    "comment:security-remediation-tests": "Security remediation test commands for US-082-B Security Enhancement Phase",
    "test:security:csp": "jest --config jest.config.security.js __tests__/security/cspManager.security.test.js",
    "test:security:session": "jest --config jest.config.security.js __tests__/security/sessionManagement.security.test.js",
    "test:security:csrf": "jest --config jest.config.security.js __tests__/security/csrf.security.test.js",
    "test:security:integration": "jest --config jest.config.integration.js __tests__/integration/securityRemediationIntegration.test.js",
    "test:security:remediation": "npm run test:security:csp && npm run test:security:session && npm run test:security:csrf",
    "test:security:remediation:all": "npm run test:security:remediation && npm run test:security:integration",
    "test:js:all": "npm run test:js:unit && npm run test:js:integration && npm run test:js:e2e && npm run test:js:uat",
    "comment:td-005-emergency-tests": "TD-005 Phase 1 Emergency Stabilization test commands",
    "test:emergency": "jest --config jest.config.unit.js --maxWorkers=1 --forceExit --detectOpenHandles --testTimeout=10000",
    "test:emergency:teams": "jest --config jest.config.unit.js --testPathPattern='teams' --testPathIgnorePatterns='teams-performance\\.test\\.js$' --maxWorkers=1 --forceExit --testTimeout=10000",
    "test:emergency:single": "jest --config jest.config.unit.js --forceExit --testTimeout=5000 --runInBand",
    "test:emergency:debug": "node --inspect-brk=0.0.0.0:9229 ./node_modules/.bin/jest --config jest.config.unit.js --maxWorkers=1 --runInBand --no-cache",
    "comment:teams-migration-tests": "Teams Entity Migration specific test commands for US-082-C",
    "test:js:teams:unit": "jest --config jest.config.unit.js --testPathPattern='teams.*migration|teams.*entity'",
    "test:js:teams:integration": "jest --config jest.config.integration.js --testPathPattern='teams.*migration|teams.*entity'",
    "test:js:teams:edge-cases": "jest --config jest.config.unit.js --testPathPattern='teams.*edge-cases'",
    "test:js:teams:accessibility": "jest --config jest.config.unit.js --testPathPattern='teams.*accessibility'",
    "comment:td-005-phase2": "TD-005 Phase 2: Core Infrastructure Restoration commands",
    "td-005:phase2": "node scripts/td-005-phase2-execute.js",
    "td-005:phase2:memory-test": "jest --config jest.config.memory-optimized.js",
    "td-005:phase2:compliance": "node -e \"import('./__tests__/__fixes__/base-entity-manager-compliance.js').then(m => m.validateEntityManagerCompliance().then(r => console.log(JSON.stringify(r, null, 2))))\"",
    "td-005:phase2:security": "node -e \"import('./__tests__/__fixes__/component-orchestrator-security-validation.js').then(m => m.validateComponentOrchestratorSecurity().then(r => console.log(JSON.stringify(r, null, 2))))\"",
    "test:js:teams:performance": "jest --config jest.config.unit.js --testPathPattern='teams.*performance'",
    "test:js:teams:all": "npm run test:js:teams:unit && npm run test:js:teams:integration && npm run test:js:teams:edge-cases && npm run test:js:teams:accessibility",
    "test:js:components": "jest --config jest.config.components.js",
    "setup:groovy-jdbc": "node scripts/setup-groovy-jdbc.js",
    "groovy:classpath": "node scripts/setup-groovy-classpath.js",
    "groovy:classpath:status": "node scripts/setup-groovy-classpath.js status",
    "test:groovy:unit": "node scripts/run-groovy-test.js ../src/groovy/umig/tests/unit",
    "test:groovy:integration": "node scripts/run-groovy-test.js ../src/groovy/umig/tests/integration",
    "test:groovy:security": "npm run test:security:import && npm run test:security:comprehensive && npm run test:security:url",
    "test:groovy:all": "npm run test:groovy:unit && npm run test:groovy:integration && npm run test:groovy:security",
    "test:all:unit": "npm run test:js:unit && npm run test:groovy:unit",
    "test:all:integration": "npm run test:js:integration && npm run test:groovy:integration",
    "test:all:comprehensive": "npm run test:js:all && npm run test:groovy:all",
    "test:integration": "jest --config jest.config.integration.js",
    "test:integration:auth": "node scripts/test-runners/IntegrationTestRunner.js --auth",
    "test:integration:core": "node scripts/test-runners/IntegrationTestRunner.js --core",
    "test:unit": "jest --config jest.config.unit.js",
    "test:unit:pattern": "node scripts/test-runners/UnitTestRunner.js --pattern",
    "test:unit:category": "node scripts/test-runners/UnitTestRunner.js --category",
    "test:uat": "playwright test __tests__/uat/",
    "test:uat:quick": "node scripts/test-runners/UATTestRunner.js --quick",
    "test:iterationview": "node scripts/test-runners/EnhancedIterationViewTestRunner.js",
    "test:all": "npm run test:with-infrastructure",
    "test:groovy": "npm run test:unit && npm run test:integration",
    "test:us022": "npm run test:integration:auth",
    "test:us028": "npm run test:iterationview && npm run test:uat",
    "test:stepview": "npm run test:stepview:unit && npm run test:stepview:integration && npm run test:stepview:uat",
    "test:stepview:unit": "jest __tests__/unit/stepview/ --verbose",
    "test:stepview:unit:macro": "jest --testPathPattern='stepViewMacro\\.test\\.groovy' --verbose",
    "test:stepview:unit:role": "jest --testPathPattern='stepViewMacroRole.*\\.groovy' --verbose",
    "test:stepview:integration": "playwright test __tests__/integration/api/stepview/stepViewJavaScriptSyncTest.js",
    "test:stepview:integration:api": "node ../src/groovy/umig/tests/integration/stepViewApiIntegrationTest.groovy",
    "test:stepview:integration:auth": "playwright test __tests__/integration/api/stepview/stepViewJavaScriptSyncTest.js --grep 'role-based'",
    "test:stepview:rbac": "jest __tests__/unit/stepview/stepview-rbac-tests.js --verbose",
    "test:stepview:integration:rbac": "playwright test __tests__/integration/api/stepview/stepViewJavaScriptSyncTest.js --grep 'should verify role-based UI elements'",
    "test:stepview:uat": "playwright test __tests__/uat/stepview-alignment-uat.test.js",
    "test:stepview:uat:mobile": "playwright test __tests__/uat/stepview-alignment-uat.test.js --grep 'mobile responsiveness'",
    "test:stepview:uat:performance": "playwright test __tests__/uat/stepview-alignment-uat.test.js --grep 'load StepView page'",
    "test:stepview:all": "npm run test:stepview:unit && npm run test:integration -- --testNamePattern='stepview|StepView' && npm run test:uat -- --grep='stepview'",
    "test:stepview:regression": "npm run test:stepview:all && npm run test:uat:quick",
    "test:stepview:url-fix": "npx jest __tests__/regression/StepViewUrlFixRegressionTest.test.js --verbose",
    "test:stepview:dom-refresh": "node test-stepview-dom-refresh-fix.cjs",
    "test:us036": "npm run test:stepview:all",
    "test:us036:quick": "npm run test:stepview:unit && npm run test:stepview:uat:performance",
    "test:unit:stepview:badges": "node __tests__/unit/stepview/status-badge-mapping.test.js",
    "test:unit:security:rbac": "node __tests__/unit/security/rbac-role-detection.test.js",
    "test:security": "npm run test:security:import && npm run test:security:comprehensive && npm run test:security:url && npm run test:security:email",
    "test:security:quick": "cd .. && groovy src/groovy/umig/tests/security/ImportApiSecurityValidationTest.groovy",
    "test:security:import": "cd .. && groovy src/groovy/umig/tests/security/ImportApiSecurityValidationTest.groovy",
    "test:security:comprehensive": "cd .. && groovy src/groovy/umig/tests/security/ComprehensiveSecurityTest.groovy",
    "test:security:url": "cd .. && groovy src/groovy/umig/tests/security/UrlConfigurationApiSecurityTest.groovy",
    "test:security:email": "node scripts/test-runners/EmailSecurityTestRunner.js",
    "test:security:email:verbose": "node scripts/test-runners/EmailSecurityTestRunner.js --verbose",
    "test:security:email:quiet": "node scripts/test-runners/EmailSecurityTestRunner.js --quiet",
    "test:security:email:direct": "cd .. && groovy src/groovy/umig/tests/unit/security/EmailTemplateSecurityTest.groovy",
    "test:performance": "npm run test:performance:import && npm run test:performance:quick",
    "test:performance:load": "npm run test:import:performance:verbose",
    "test:performance:stress": "npm run test:import:performance:stress",
    "test:performance:import": "npm run test:import:performance",
    "test:performance:quick": "npm run test:import:performance:quick",
    "comment:performance-optimization-tests": "Performance optimization test commands for US-082-B Performance Enhancement Phase",
    "test:performance:component": "jest --config jest.config.security.js __tests__/performance/componentPerformance.test.js",
    "test:performance:memory": "jest --config jest.config.security.js __tests__/performance/memoryManagement.test.js",
    "test:performance:optimization": "npm run test:performance:component && npm run test:performance:memory",
    "test:performance:benchmark": "npm run test:performance:optimization --verbose",
    "test:integration:repositories": "groovy ../src/groovy/umig/tests/integration/repositories/status-repository.test.groovy",
    "generate:postman": "cd ../docs/api/postman && npx openapi-to-postmanv2 -s ../openapi.yaml -o ./UMIG_API_V2_Collection.postman_collection.json -p -O folderStrategy=Tags",
    "generate:postman:enhanced": "node scripts/generate-postman-enhanced.js",
    "generate:redoc": "cd ../docs/api && npx @redocly/cli build-docs openapi.yaml --output redoc-static.html --title 'UMIG API V2'",
    "generate:swagger": "cd ../docs/api && npx swagger-ui-cli build openapi.yaml -o swagger-ui-dist",
    "generate:api-docs": "npm run generate:redoc && npm run generate:swagger && npm run generate:postman",
    "validate:openapi": "cd ../docs/api && npx @redocly/cli lint openapi.yaml",
    "lint:md": "prettier --check '**/*.md' --prose-wrap always --print-width 80",
    "lint:md:fix": "prettier --write '**/*.md' --prose-wrap always --print-width 80",
    "lint:md:aggressive": "prettier --check '**/*.md' --prose-wrap always --print-width 80 --tab-width 2 --single-quote --trailing-comma all",
    "markdownlint": "markdownlint '../**/*.md' --ignore '../node_modules/**' --ignore '../local-dev-setup/node_modules/**'",
    "markdownlint:fix": "markdownlint '../**/*.md' --ignore '../node_modules/**' --ignore '../local-dev-setup/node_modules/**' --fix",
    "lint:mega": "podman run --rm -v \"$PWD/..:/tmp/lint:rw\" -e MEGALINTER_CONFIG=/tmp/lint/.mega-linter.yml -e DEFAULT_WORKSPACE=/tmp/lint oxsecurity/megalinter-java:latest",
    "lint:mega:docker": "docker run --rm -v \"$PWD/..:/tmp/lint:rw\" -e MEGALINTER_CONFIG=/tmp/lint/.mega-linter.yml -e DEFAULT_WORKSPACE=/tmp/lint oxsecurity/megalinter-java:latest",
    "mailhog:test": "node scripts/utilities/test-mailhog-smtp.js",
    "mailhog:check": "curl -s http://localhost:8025/api/v2/messages | jq '.count'",
    "mailhog:clear": "curl -X DELETE http://localhost:8025/api/v1/messages && echo 'MailHog inbox cleared'",
    "email:test": "npm run email:test:database && npm run email:test:jest",
    "email:test:database": "node scripts/utilities/email-database-sender.js",
    "email:test:jest": "jest __tests__/email/enhanced-email-database-templates.test.js --verbose",
    "email:test:comprehensive": "groovy ../src/groovy/umig/tests/integration/comprehensive-email-test-suite.groovy",
    "email:test:enhanced": "node scripts/test-runners/EnhancedEmailTestRunner.js",
    "email:test:all": "npm run email:test:database && npm run email:test:jest",
    "email:demo": "node scripts/utilities/demo-enhanced-email.js",
    "test:us039": "npm run test:us039:unit && npm run test:us039:integration",
    "test:us039:verbose": "npm run email:test:all",
    "test:us039:comprehensive": "npm run email:test:comprehensive",
    "test:us067": "npm run test:security:email",
    "test:us067:verbose": "npm run test:security:email:verbose",
    "health:check": "node scripts/test-runners/HealthCheckRunner.js",
    "quality:check": "node scripts/test-runners/MasterQualityCheckRunner.js",
    "quality:api": "node scripts/test-runners/ApiSmokeTestRunner.js",
    "validate:stepview": "node scripts/test-runners/StepViewStatusValidationTestRunner.js",
    "test:admin-gui": "node scripts/test-runners/AdminGuiTestRunner.js",
    "test:stepview-fixes": "node scripts/test-runners/StepViewFixesTestRunner.js",
    "test:import": "npm run test:import:api && npm run test:import:workflow && npm run test:import:performance",
    "test:import:api": "node scripts/test-runners/ImportApiValidationTestRunner.js",
    "test:import:api:verbose": "node scripts/test-runners/ImportApiValidationTestRunner.js --verbose",
    "test:import:api:quick": "node scripts/test-runners/ImportApiValidationTestRunner.js --quick",
    "test:import:workflow": "node scripts/test-runners/CsvImportWorkflowTestRunner.js",
    "test:import:workflow:verbose": "node scripts/test-runners/CsvImportWorkflowTestRunner.js --verbose",
    "test:import:workflow:quick": "node scripts/test-runners/CsvImportWorkflowTestRunner.js --quick",
    "test:import:workflow:large": "node scripts/test-runners/CsvImportWorkflowTestRunner.js --large-dataset",
    "test:import:performance": "node scripts/test-runners/ImportPerformanceValidationTestRunner.js",
    "test:import:performance:verbose": "node scripts/test-runners/ImportPerformanceValidationTestRunner.js --verbose",
    "test:import:performance:quick": "node scripts/test-runners/ImportPerformanceValidationTestRunner.js --quick",
    "test:import:performance:stress": "node scripts/test-runners/ImportPerformanceValidationTestRunner.js --stress-test",
    "test:import:groovy": "npm run test:integration -- --pattern=Import",
    "test:import:groovy:api": "groovy src/groovy/umig/tests/integration/ImportApiIntegrationTest.groovy",
    "test:import:groovy:workflow": "groovy src/groovy/umig/tests/integration/CsvImportWorkflowTest.groovy",
    "test:import:groovy:performance": "groovy src/groovy/umig/tests/integration/ImportPerformanceTest.groovy",
    "test:us034": "npm run test:us034:unit && npm run test:us034:integration",
    "test:us034:comprehensive": "npm run test:import && npm run test:import:groovy",
    "test:us034:quick": "npm run test:import:api:quick && npm run test:import:workflow:quick && npm run test:import:performance:quick",
    "test:us056a": "node scripts/test-runners/IntegrationTestRunner.js --us056a",
    "test:us056a:runtime": "groovy src/groovy/umig/tests/integration/StepDataTransformationServiceRuntimeTest.groovy",
    "test:unit:watch": "jest --config jest.config.unit.js --watch",
    "test:unit:coverage": "jest --config jest.config.unit.js --coverage",
    "test:dom": "jest --config jest.config.dom.js --passWithNoTests",
    "test:dom:watch": "jest --config jest.config.dom.js --watch",
    "test:integration:watch": "jest --config jest.config.integration.js --watch",
    "test:email": "jest --config jest.config.email.js",
    "test:email:watch": "jest --config jest.config.email.js --watch",
    "test:e2e": "playwright test __tests__/e2e/",
    "test:e2e:headed": "playwright test __tests__/e2e/ --headed",
    "test:e2e:debug": "playwright test __tests__/e2e/ --debug",
    "test:uat:headed": "playwright test __tests__/uat/ --headed",
    "test:uat:debug": "playwright test __tests__/uat/ --debug",
    "test:with-infrastructure": "npm run test:integration && npm run test:email && npm run test:e2e && npm run test:uat",
    "test:without-infrastructure": "npm run test:unit && npm run test:dom && npm run test:generators",
    "test:smart": "node scripts/test-runners/SmartTestRunner.js",
    "test:quick": "npm run test:without-infrastructure",
    "test:generators": "jest __tests__/generators/ --verbose",
    "test:api": "jest __tests__/api/ --verbose",
    "test:admin-gui:unit": "jest __tests__/unit/admin-gui/ --verbose",
    "test:security:unit": "jest __tests__/unit/security/ --verbose",
    "test:regression": "jest __tests__/regression/ --verbose",
    "test:regression:compatibility": "jest --config jest.config.unit.js __tests__/regression/backwardCompatibility.test.js",
    "test:regression:security": "npm run test:regression:compatibility && npm run test:security:remediation:all",
    "test:migrations": "jest __tests__/migrations/ --verbose",
    "test:us034:unit": "npm run test:unit && npm run test:generators",
    "test:us034:integration": "npm run test:integration -- --testNamePattern='import|Import'",
    "test:us039:unit": "npm run test:unit -- --testNamePattern='email|Email'",
    "test:us039:integration": "npm run test:email",
    "test:us042:unit": "npm run test:unit -- --testNamePattern='migration.*types|MigrationTypes'",
    "test:us042:integration": "npm run test:integration -- --testNamePattern='migration.*types|MigrationTypes'",
    "test:us042": "npm run test:us042:unit && npm run test:us042:integration",
    "test:quality": "npm run test:quick && npm run quality:check",
    "comment:us082-comprehensive-testing": "US-082-B comprehensive test suite covering all security and performance enhancements",
    "test:us082b:security": "npm run test:security:remediation:all",
    "test:us082b:performance": "npm run test:performance:optimization",
    "test:us082b:regression": "npm run test:regression:security",
    "test:us082b:comprehensive": "npm run test:us082b:security && npm run test:us082b:performance && npm run test:us082b:regression",
    "test:us082b:quick": "npm run test:security:remediation && npm run test:performance:component",
    "test:health": "npm run health:check && npm run test:quick",
    "validate:test-infrastructure": "node scripts/test-infrastructure-validator.js",
    "comment:enhanced-test-coverage": "Enhanced test coverage commands with 95%+ target for new implementations",
    "test:coverage:security": "npm run test:security:remediation -- --coverage --coverageThreshold='{\"global\":{\"branches\":95,\"functions\":95,\"lines\":95,\"statements\":95}}'",
    "test:coverage:performance": "npm run test:performance:optimization -- --coverage --coverageThreshold='{\"global\":{\"branches\":90,\"functions\":90,\"lines\":90,\"statements\":90}}'",
    "comment:td-005-phase-4": "TD-005 Phase 4: Staged Testing Approach for US-087 Phase 2 Teams Migration Readiness",
    "test:js:staged:step1": "npm run test:js:unit",
    "test:js:staged:step2": "npm run test:js:integration",
    "test:js:staged:step3": "npm run test:js:components",
    "test:js:staged:step4": "npm run test:js:security",
    "test:js:staged:progression": "npm run test:js:staged:step1 && npm run test:js:staged:step2 && npm run test:js:staged:step3 && npm run test:js:staged:step4",
    "test:js:staged:teams": "jest --config jest.config.unit.js --testPathPattern='teams' && jest --config jest.config.integration.js --testPathPattern='teams' && jest --config jest.config.components.js --testPathPattern='teams'",
    "test:js:teams:migration-ready": "npm run test:js:teams:unit && npm run test:js:teams:integration && npm run test:js:teams:edge-cases && npm run test:js:teams:accessibility && npm run test:js:teams:performance",
    "test:js:quick:optimized": "jest --config jest.config.unit.js --maxWorkers=1 --forceExit --testTimeout=5000",
    "test:js:memory-optimized": "jest --config jest.config.memory-optimized.js",
    "test:all:staged": "npm run test:all:unit && npm run test:all:integration && npm run test:js:components",
    "test:us087:phase2:readiness": "npm run test:js:teams:migration-ready && npm run test:js:staged:progression",
    "performance:monitor": "node -e \"import('./__tests__/__fixes__/enhanced-performance-monitor.js').then(m => { const monitor = m.startPerformanceMonitoring('manual-session'); setTimeout(() => m.generatePerformanceReport(), 1000); })\"",
    "performance:teams": "node -e \"import('./__tests__/__fixes__/enhanced-performance-monitor.js').then(m => { const monitor = m.startPerformanceMonitoring('teams-migration-readiness'); m.recordTeamsMetric('readiness-check', 100, '%', true); setTimeout(() => m.generatePerformanceReport(), 1000); })\"",
    "performance:validate": "node -e \"import('./__tests__/__fixes__/enhanced-performance-monitor.js').then(m => m.performanceMonitor.analyzePerformance()).then(r => console.log(JSON.stringify(r, null, 2)))\"",
    "td-005:phase4:complete": "npm run test:js:quick:optimized && npm run test:js:memory-optimized && npm run performance:teams && npm run td-005:phase2:compliance",
    "td-005:phase4:validate": "npm run test:us087:phase2:readiness && npm run performance:validate",
    "td-005:phase4:final-validation": "node scripts/td-005-phase4-validation.js",
    "us087:phase2:ready": "npm run td-005:phase4:final-validation && echo '🎯 System FULLY READY for US-087 Phase 2 Teams Component Migration'"
  },
  "author": "Lucas Challamel",
  "license": "ISC",
  "dependencies": {
    "@faker-js/faker": "^8.4.1",
    "chalk": "^5.4.1",
    "commander": "^11.1.0",
    "csv-parser": "^3.0.0",
    "dotenv": "^17.0.1",
    "execa": "^9.6.0",
    "nodemailer": "^6.9.14",
    "pg": "^8.11.3",
    "playwright": "^1.54.1",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.0",
    "@redocly/cli": "^1.19.0",
    "babel-jest": "^30.0.2",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^30.1.2",
    "jsdom": "^26.1.0",
    "markdownlint-cli": "^0.45.0",
    "openapi-to-postmanv2": "5.0.2",
    "prettier": "^3.0.0",
    "supertest": "^7.1.4",
    "swagger-ui-cli": "^0.0.11"
  }
}
