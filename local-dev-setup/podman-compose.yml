---
version: '3.8'

services:
  confluence:
    image: umig/confluence-custom:8.5.6
    build:
      context: ./confluence
    container_name: umig_confluence
    ports:
      - "8090:8090" # Confluence HTTP port
      # - "8091:8091" # Synchrony port, if needed later
    environment:
      - JVM_MINIMUM_MEMORY=1024m
      - JVM_MAXIMUM_MEMORY=6144m
      - ATL_LICENSE_KEY=${CONFLUENCE_LICENSE_KEY:-} # Developer license key (optional here, can be set in UI)
      - CATALINA_OPTS=-Dplugin.script.roots=/var/atlassian/application-data/confluence/scripts -Dplugin.rest.scripts.package=umig.api.v2,umig.api.v2.web
      # - CONFLUENCE_CONTEXT_PATH=/umig # If you want confluence on a subpath
    volumes:
      - confluence_data:/var/atlassian/application-data/confluence # Persist Confluence data
      - ../src/groovy/umig:/var/atlassian/application-data/confluence/scripts/umig # Mount the umig namespace directly as a script root


    networks:
      - umig_net

  postgres:
    image: postgres:14-alpine # Using a specific version, alpine for smaller size
    container_name: umig_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-umig_db}
      POSTGRES_USER: ${POSTGRES_USER:-umig_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme} # Change this in your .env file
      UMIG_DB_NAME: ${UMIG_DB_NAME:-umig_app_db}
      UMIG_DB_USER: ${UMIG_DB_USER:-umig_app_user}
      UMIG_DB_PASSWORD: ${UMIG_DB_PASSWORD:-changeme_too}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-umig_user} -d ${POSTGRES_DB:-umig_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - umig_net


  mailhog:
    image: mailhog/mailhog:latest
    container_name: umig_mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - umig_net

volumes:
  confluence_data:
  postgres_data:

networks:
  umig_net:
    driver: bridge
